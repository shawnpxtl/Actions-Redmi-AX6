#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build AX6 OpenWRT-IPQ

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
#    - cron: 00 3 * * 6

env:
  REPO_URL: https://github.com/qosmio/openwrt-ipq
  REPO_BRANCH: 24.10-nss
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: AX6/openwrt-ipq/AX6-openwrt-ipq.config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: AX6/openwrt-ipq/diy-part2-ax6.sh
#  DIY_P3_SH: diy-part3.sh
#  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: true
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  FILE_NAME: Redmi-AX6-OpenWRT-IPQ
  PRODUCT_NAME: Redmi-AX6-OpenWRT-IPQ

jobs:
  build:
    runs-on: ubuntu-22.04
    # if: github.event.repository.owner.id == github.event.sender.id

    steps:
    #- name: WeChat notification
    #  run: curl https://sc.ftqq.com/${{ secrets.ServerChan }}.send?text=${{ env.FILE_NAME }}开始编译
      
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /etc/mysql /etc/php /usr/local/lib/android /opt/ghc
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential clang flex bison g++ gawk \
        gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev \
        python3-distutils python3-setuptools rsync swig unzip zlib1g-dev file wget
        sudo -E apt-get -qq install time
        sudo -E apt-get -qq install gn
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        df -Th
        
    - name: Check server performance
      run: |
        echo "警告⚠"
        echo "若分配的服务器性能不足，务必及时取消，重新运行！"
        echo "截止到现在运行Action大概率用的EPYC 7763了"
        echo "自测编译成功CPU型号：8370C,8171M,8272CL,E5-26xxv4,EPYC 7763"
        echo "自测性能不足CPU型号："
        echo -e "-------------- ------------CPU信息------------------------------------------\n"
        echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
        echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "-------------------------------内存信息-------------------------------------------"
        echo "已安装内存详细信息："
        sudo lshw -short -C memory | grep GiB
        echo -e "\n"
        echo "-----------------------------硬盘信息---------------------------------------------"
        echo -e  "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
        echo "硬盘详情："
        df -Th
        
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: shawnpxtl<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "DATE1=$(date "+%Y-%m-%d")" >> $GITHUB_ENV
#        echo "::set-env name=useVersionInfo::$useVersionInfo"
#        echo "::set-env name=DATE::$(date "+%Y-%m-%d %H:%M:%S")"

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH
        
#    - name: Revert some drop sh*t
#      run: cp -rf $GITHUB_WORKSPACE/AX6/revert/* openwrt/      

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a
      
    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a
      
    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        #chmod +x $DIY_P3_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
        #$GITHUB_WORKSPACE/$DIY_P3_SH
#        sed -i 's/OpenWrt/MRG AutoBuild ${{ env.DATE1 }} @ OpenWrt/g' package/lean/default-settings/files/zzz-default-settings

#     - name: SSH connection to Actions
#       uses: P3TERX/debugger-action@master
#       if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')


    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> ${GITHUB_OUTPUT}
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
#        [ -s DEVICE_NAME ] && echo "::set-env name=DEVICE_NAME::_$(cat DEVICE_NAME)"
#        echo "::set-env name=FILE_DATE::_$(date +"%Y%m%d%H%M")"

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Clean up server space
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd openwrt/
        rm -rf $(ls . | grep -v "^bin$" | xargs) 2>/dev/null
        df -hT ${PWD}

    - name: Upload bin directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd $GITHUB_WORKSPACE
        tar -zcvf AllPackages.tar.gz openwrt/bin/packages
        cp AllPackages.tar.gz openwrt/bin/targets/*/*
        cd openwrt/bin/targets/*/*
        rm -rf packages config.buildinfo feeds.buildinfo sha256sums version.buildinfo
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> ${GITHUB_OUTPUT}
#        echo "::set-env name=FIRMWARE::$PWD"
        
    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: env.UPLOAD_FIRMWARE == 'true' && steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Create release
      id: release
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.DATE }} for ${{ env.PRODUCT_NAME }}
        allowUpdates: true
        tag: ${{ env.FILE_NAME }}
        commit: master
        github_token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          默认IP： 192.168.2.1 默认密码： 无
          当前使用版本:【编译前的最后一次[➦主源码](https://github.com/qosmio/openwrt-ipq)更新记录】
          Default IP:192.168.2.1 password:none
          Current version: [The last [➦source code](https://github.com/qosmio/openwrt-ipq) update record before compiling]
          ${{ env.useVersionInfo }}
        artifacts: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@master
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        repo:
        keep_latest: 3
        delete_tag_pattern:
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#    - name: Telegram notification
#      run: |
#        MSG="
#        编译时间：${{ env.DATE }}
#        OpenWrt 更新信息：${{ env.useVersionInfo }}
#        ${{ env.PRODUCT_NAME }} 编译完成
#        "
#        curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_TO }}&text=${MSG}"
        
